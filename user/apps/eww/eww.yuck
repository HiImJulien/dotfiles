
(defwidget sys-icon []
  (eventbox
    :class "sys-icon"
    :onclick "eww open --toggle power-menu-window"
    (label :class "sys-icon" :text "")))

(defvar is-bluetooth-on true)

(defwidget bt-icon []
  (label :class "bluetooth-icon" :text {is-bluetooth-on ? "󰂯" : "󰂲"}))

(defwidget time []
  (label :text {formattime(EWW_TIME, "%H:%M")}))

(defwidget noop []
  (label :text ""))

(deflisten active-workspace :initial -1 "scripts/hypr_watch_active_workspace.sh")
(defwidget workspace-icon [workspace]
  (eventbox
    :class {(workspace != active-workspace) ? "workspace-icon" : "workspace-icon active"}
    :onclick "hyprctl dispatch workspace ${workspace}"
    (label :text {(workspace != active-workspace) ? "" : ""})))

(deflisten bluetooth-state "scripts/bluetooth.py watch-adapter")
(defwidget bluetooth-icon []
  (eventbox
    :class {jq(bluetooth-state, ".is_powered") == true ? "bluetooth-icon" : "bluetooth-icon active"}
    (label :text {jq(bluetooth-state, ".is_powered") == true ? "󰂯" : "󰂲" })))

(defwidget workspaces []
  (box :class "workspaces" :space-evenly false
    (workspace-icon :workspace 1)
    (workspace-icon :workspace 2)
    (workspace-icon :workspace 3)
    (workspace-icon :workspace 4)
    (workspace-icon :workspace 5)
    (workspace-icon :workspace 6)
    (workspace-icon :workspace 7)
    (workspace-icon :workspace 8)
    (workspace-icon :workspace 9)))

(defwidget bar-left []
  (box :space-evenly false :halign "start"
    (sys-icon)
    (workspaces)))

(defwidget bar-center []
  (box :space-evenly false :halign "center"
    (noop)))

(defwidget bar-right []
  (box :space-evenly false :halign "end"
    (bluetooth-icon)
    (time)))

(defwidget bar []
  (centerbox :orientation "horizontal" :class "bar"
    (bar-left)
    (bar-center)
    (bar-right)))

(defwindow main-bar
  :monitor 1
  :geometry (geometry :x "0"
                      :y "10px"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  :stacking "fg"
  :exclusive true
  :namespace "eww-bar"
  (bar))

(defwindow second-bar 
  :monitor 0
  :geometry (geometry :x "0"
                      :y "10px"
                      :width "100%"
                      :height "30px"
                      :anchor "top center")
  :stacking "fg"
  :exclusive true
  :namespace "eww-bar"
  (bar))

(defwidget power-menu-item [?menu-label ?action]
  (eventbox :class "power-menu-item" :onclick action
    (label :text menu-label)))

(defwidget power-menu []
  (box :orientation "v" :space-evenly true
    (power-menu-item :menu-label "Lock" :action "echo Lock")
    (power-menu-item :menu-label "Sleep" :action "systemctl suspend")
    (power-menu-item :menu-label "Shutdown")
  ))

(defwindow power-menu-window
  :monitor 1
  :geometry (geometry :x "20px"
                      :y "5px"
                      :width "200px"
                      :height "100px")
  :stacking "fg"
  :exclusive false
  :namespace "eww-widget"
  (power-menu))

